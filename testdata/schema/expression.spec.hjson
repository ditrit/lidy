{
  target: expression
  "distinguish known and unknown identifiers": {
    "accept if known": [
      ["timestamp", {}]
      ["boolean", {}]
      ["float", {}]
      ["null", {}]
      ["any", {}]
      ["int", {}]
      ["str", {}]
    ]
    "reject if (rule is) unknown": [
      ["cat", { contain: "cat" }]
      ["bar", { contain: "bar" }]
    ]
  }
  "check that checkers are used with the right signature": {
    "reject": [
      ["_map: word", {}]
      ["_map: str", {}]
      ["_map: 1", {}]
      ["_map: 1.1", {}]
      ["_map: true", {}]
      ["_map: false", {}]
      ["_map: null", {}]
      ["_map: []", {}]
    ]
  }
  "check for mapChecker": {
    "accept if it is a valid form": [
      ["_map: {}", {}]
      ["_map: {}\n_optional: {}", {}]
      ["_map: {}\n_mapOf: {}", {}]
      ["_map: {}\n_optional: {}\n_mapOf: { str: str }", {}]
      ["_map: {}\n_optional: {}\n_mapOf: { str: str }\n_min: 1\n_max:2", {}]
      ["_map: {}\n_optional: {}\n_mapOf: { str: str }\n_nb: 2", {}]
      ["_mapOf: { str: str }", {}]
    ]
    "reject if is a invalid form:": [
      ["_map: []", {}]
      ["_mapOf: []", {}]
      ["_mapOf: [str]", {}]
      ["_mapOf: str", {}]
      ["map: {}", {}]
    ]
  }
  "check for seqChecker": {
    "accept if it is a valid form": [
      ["_tuple: []", {}]
      ["_tuple: []\n_optional: []", {}]
      ["_tuple: []\n_seqOf: int", {}]
      ["_tuple: []\n_optional: []\n_seqOf: int", {}]
      ["_tuple: []\n_optional: []\n_seqOf: int\n_min: 1\n_max: 2", {}]
      ["_tuple: []\n_optional: []\n_seqOf: int\n_nb: 2", {}]
      ["_seqOf: int", {}]
    ]
    "reject if is a invalid form:": [
      ["_seqOf: []", {}]
      ["tuple: str", {}]
    ]
    "reject if is a invalid form:": [
      ["_tuple: word", {}]
      ["_map: str", {}]
      ["_map: 1", {}]
      ["_map: 1.1", {}]
      ["_map: true", {}]
      ["_map: false", {}]
      ["_map: null", {}]
      ["_map: []", {}]
      ["map: {}", {}]
    ]
  }
  "check for min.checker, max.checker and nb.checker": {
    "accept valid forms": [
      ["_map: {}\n_min: 2", {}]
      ["_map: {}\n_max: 2", {}]
      ["_map: {}\n_nb: 2", {}]
    ]
    "reject invalid forms": [
      ["_map: {}\n_min: []", { contain: "_min" }]
      ["_map: {}\n_min: {}", { contain: "_min" }]
      ["_map: {}\n_min: aa", { contain: "_min" }]
      ["_map: {}\n_max: []", { contain: "_max" }]
      ["_map: {}\n_max: {}", { contain: "_max" }]
      ["_map: {}\n_max: bc", { contain: "_max" }]
      ["_map: {}\n_nb: []", { contain: "_nb" }]
      ["_map: {}\n_nb: {}", { contain: "_nb" }]
      ["_map: {}\n_nb: z_", { contain: "_nb" }]
    ]
  }
  "check for oneOf.checker": {
    "accept valid forms": [
      ["_oneOf: []", {}]
      ["_oneOf: [str]", {}]
      ["_oneOf: [str, int, { _map: {} }]", {}]
    ]
    "reject invalid forms": [
      ["_oneOf: 22", { contain: "_oneOf" }]
      ["_oneOf: {}", { contain: "_oneOf" }]
      ["_oneOf: aa", { contain: "_oneOf" }]
      ["_oneOf: .2", { contain: "_oneOf" }]
      ["_oneOf: true", { contain: "_oneOf" }]
      ["_oneOf: null", { contain: "_oneOf" }]
    ]
  }
  "check for in.checker": {
    "accept valid forms": [
      ["_in: []", {}]
      ["_in: [aaa]", {}]
      ["_in: [aaa, bbb]", {}]
      ["_in: [true, bbb]", {}]
      ["_in: [false, null, zz, 0.1]", {}]
      ["_in: [aaa, 22, \"22\"]", {}]
    ]
    "reject invalid forms": [
      ["_in: [[]]", { contain: "_in" }]
      ["_in: [{}]", { contain: "_in" }]
      ["_in: [{ _map: {} }]", { contain: "_in" }]
      ["_in: 22", { contain: "_in" }]
      ["_in: {}", { contain: "_in" }]
      ["_in: aa", { contain: "_in" }]
      ["_in: .2", { contain: "_in" }]
      ["_in: true", { contain: "_in" }]
      ["_in: null", { contain: "_in" }]
    ]
  }
}
